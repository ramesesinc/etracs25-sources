import com.rameses.annotations.*;
import com.rameses.util.*;
import police.facts.*;
import java.text.*;
import treasury.utils.*;
import treasury.facts.*;

public class PoliceClearanceCashReceiptInterceptor  {

	@DataContext("cashreceipt_policeclearance")
	def receiptdb;

	@DataContext("cashreceipt_policeclearance_pending")
	def receiptpendingdb;	

	@Service("SequenceService")
	def sequenceSvc;	

	@Service('DateService') 
	def dateSvc; 

	@Env 
	def env; 


	@After(pattern="CashReceiptService.post", eval="#{result.collectiontype?.handler == 'policeclearance'}")
	public void postPayment(def evt) {
		def r = evt.result;

		def serveryear = dateSvc.getServerYear();
		def orgcode = env.ORGCODE;
		if ( orgcode ) orgcode = orgcode.replace('-','').replace('_','');
		if ( !orgcode ) orgcode = '';

		def seqkey = 'PCPMT-'+ orgcode + serveryear; 
		def seqno = sequenceSvc.getNextSeries( seqkey ); 
		def controlno = seqkey + String.format("%05d", seqno); 

		receiptdb.create([ 
			objid   : r.objid, 
			txndate : r.txndate, 
			txntype : r.app.type,
			receiptdate : r.receiptdate, 
			receiptno   : r.receiptno, 
			amount  : r.amount, 
			payer   : r.payer,
			paidby  : r.paidby,
			paidbyaddress : r.paidbyaddress, 
			trackingno   : controlno, 
			purpose : r.app.purpose,  
			voided  : 0 
		]); 

		receiptpendingdb.create([ objid: r.objid, receipt:[ objid: r.objid ]]);
	} 

	@After(pattern="CashReceiptVoidService.post",index=0,eval="#{result.receipt.collectiontype.handler=='policeclearance'}")
	public void voidPayment( evt ) { 
		def r = evt.args[0].receipt; 
		receiptdb.find([ objid: r.objid ]).update([ voided: 1 ]); 
		receiptpendingdb.find([ objid: r.objid ]).delete();
	} 
}